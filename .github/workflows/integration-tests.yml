name: Integration Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: postgresql://postgres:postgres@localhost:5432/bore_test
  REDIS_HOST: localhost
  REDIS_PORT: 6379
  NODE_ENV: test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: bore_test
  CI: true

jobs:
  integration-tests:
    name: Full Integration Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: bore_test
          POSTGRES_INITDB_ARGS: "--auth-host=md5"
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Install backend dependencies
        run: |
          cd backend
          npm ci
      
      - name: Setup database
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/bore_test
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: bore_test
          DB_USER: postgres
          DB_PASSWORD: postgres
          NODE_ENV: test
        run: |
          cd backend
          echo "DATABASE_URL is set to: $DATABASE_URL"
          echo "DB_HOST is: ${DB_HOST:-not set}"
          echo "DB_USER is: ${DB_USER:-not set}"
          npm run migrate:up
      
      - name: Start backend server
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: bore_test
          DB_USER: postgres
          DB_PASSWORD: postgres
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          REDIS_ENABLED: true
          JWT_SECRET: test-secret-key
          INTERNAL_API_KEY: test-internal-key
          PORT: 3000
        run: |
          cd backend
          npm start &
          echo $! > ../backend.pid
          sleep 10
          # Check if server started successfully
          curl -f http://localhost:3000/health || exit 1
      
      - name: Start bore-server
        env:
          RUST_LOG: info
          BORE_SECRET: test-secret
          BORE_BACKEND_URL: ""
          BORE_BACKEND_API_KEY: ""
        run: |
          cargo build --release --bin bore-server
          ./target/release/bore-server &
          echo $! > bore-server.pid
          sleep 5
          # Verify bore-server is running
          ps -p $(cat bore-server.pid) || exit 1
      
      - name: Run Rust unit tests
        run: cargo test --workspace --lib
      
      - name: Run Rust integration tests
        run: cargo test --workspace --test '*' -- --ignored
      
      - name: Run backend tests
        run: |
          cd backend
          npm test
      
      - name: Cleanup
        if: always()
        run: |
          if [ -f backend.pid ]; then
            kill $(cat backend.pid) || true
          fi
          if [ -f bore-server.pid ]; then
            kill $(cat bore-server.pid) || true
          fi
      
      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            backend/test-results
            target/debug/deps/*.log
# Updated workflow configuration
