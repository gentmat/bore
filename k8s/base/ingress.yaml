---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bore-ingress
  namespace: bore-system
  labels:
    app.kubernetes.io/name: bore
    app.kubernetes.io/component: ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - api.bore.example.com
    - grafana.bore.example.com
    secretName: bore-tls
  rules:
  - host: api.bore.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: bore-backend-service
            port:
              number: 3000
  - host: grafana.bore.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana-service
            port:
              number: 3000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bore-tunnel-ingress
  namespace: bore-system
  labels:
    app.kubernetes.io/name: bore
    app.kubernetes.io/component: tunnel-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/tcp-services: |
      bore-system/bore-server-service:7835
    nginx.ingress.kubernetes.io/proxy-protocol: "true"
    nginx.ingress.kubernetes.io/connection-proxy-header: "keep-alive"
spec:
  # TCP proxy for tunnel connections
  # Note: TCP services need to be configured in the ingress controller